You are given an array prices where prices[i] is the price of a given stock on the ith day.

You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock.

Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.


class Solution:
    def maxProfit(self, prices: List[int]) -> int:
        # n = len(prices)
        # if n <= 1 :
        #     return 0
        
        
        # profits=set()
        # for i in range(n):
        #     for j in range(i+1,n):
        #         profit = prices[j] - prices[i] 
        #         profits.add(profit)

        
        # max_item = max(profits)
        # return max(0, max_item)

        if not prices:
            return 0
        
        min_price = float('inf')
        max_profit = 0
        
        for price in prices:
            if price < min_price:
                min_price = price
            elif price - min_price > max_profit:
                max_profit = price - min_price
        
        return max_profit
